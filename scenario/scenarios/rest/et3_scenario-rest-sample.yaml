t3: '1.0'
info:
  id: "scenario-rest-sample"
  version: 1.0.0
  summary: "REST-APIのサンプル"
  description: "REST-APIのサンプル"
flows:
  - id: "flow-001"
    summary: "REST-APIの実行"
    type: "CommandExecute"
    ref: "parts-rest-sample@post-sample-001"
  - id: "flow-002"
    summary: "REST-APIのHTTPステータスアサート"
    type: "CommandExecute"
    ref: "scenarios-rest-sample@rest-sample-assert-001"
  - id: "flow-003"
    summary: "RDBのデータ取得"
    type: "CommandExecute"
    ref: "parts-rdb-sample@rdb-sample-001"
  #  - id: "flow-004"
  #    summary: "ログ取得（ファイルシステムコピー）"
  #    type: "CommandExecute"
  #    ref: "parts-basic-sample@basic-sample-001"
  #  - id: "flow-005"
  #    summary: "ログの時間抽出"
  #    type: "CommandExecute"
  #    ref: "scenarios-rest-sample@rest-sample-command-002"
  #  - id: "flow-006"
  #    summary: "ログのアサート（開始ログ）"
  #    type: "CommandExecute"
  #    ref: "scenarios-rest-sample@rest-sample-assert-003"
  #  - id: "flow-007"
  #    summary: "ログのアサート（終了ログ）"
  #    type: "CommandExecute"
  #    ref: "scenarios-rest-sample@rest-sample-assert-004"
  - id: "flow-008"
    summary: "DBクリア"
    type: "CommandExecute"
    ref: "parts-rdb-sample@rdb-sample-003"
  - id: "flow-009"
    summary: "JSON解析"
    type: "CommandExecute"
    ref: "rest-sample-command-005"
  - id: "flow-010"
    summary: "RDBアサート"
    type: "CommandExecute"
    ref: "rdb-sample-rdb-006"
commands:
  - id: "rest-sample-assert-001"
    summary: "HTTPステータスコードのアサート."
    description: "HTTPステータスコードのアサート."
    command: "AssertHttpStatus"
    target: "flow-001"
    value: 201
  - id: "rest-sample-command-002"
    summary: "ログ抽出サンプル"
    description: "ログ抽出サンプル"
    command: "LogExtractDuringTime"
    target: "flow-004"
    #targetFlow: "flow-001"
    extractPattern: "^([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}).+"
    datePattern: "yyyy-MM-dd HH:mm:ss.SSS"
  - id: "rest-sample-assert-003"
    summary: "ログに特定文字列が存在するかアサート."
    description: "ログに特定文字列が存在するかアサート."
    command: "AssertExistsStringInText"
    target: "flow-004"
    value: "TodosController#create stared."
  - id: "rest-sample-assert-004"
    summary: "ログに特定文字列が存在するかアサート."
    description: "ログに特定文字列が存在するかアサート."
    command: "AssertExistsStringInText"
    target: "flow-004"
    value: "TodosController#create finished\\. [0-9]+ milisec\\."
    regexp: true
  - id: "rest-sample-command-005"
    command: "StoreJsonElement"
    target: "flow-001"
    value: "scenario.hoge"
    jsonPath: "$.id"
  - id: "rdb-sample-rdb-006"
    summary: "RDBのDataSetアサートサンプル."
    description: "RDBのDataSetアサートサンプル."
    command: "AssertRdbData"
    rdbConnectConfigRef: "parts-tododb-dataset@tododb-connection-config"
    expectedDataSetPath: "assert/expected.xml"
    expectedDataSetType: "xml"
    actualFlowId: "flow-003"
    actualDataSetType: "xml"
    tables:
      - table: "todo"
        ignoreColumns:
          - "priority"
          - "update_date"
          - "id"